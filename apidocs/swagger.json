{
    "info": {
        "version": "Build 99f7b3019e80de5c11b8da8a1070b42c9d08a74a", 
        "contact": {
            "url": "http://www.vmware.com/company/contact_sales.html"
        }, 
        "description": "VMware Identity Manager REST API documentation.", 
        "license": {
            "url": "http://www.vmware.com/download/eula/identity-manager-terms-of-service.html", 
            "name": "VMware Identity Manager Terms of Service"
        }, 
        "title": "VMware Identity Manager"
    }, 
    "paths": {
        "/SAAS/jersey/manager/api/oauth2clients": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "$ref": "#/definitions/OAuth2ClientSummaryList"
                        }
                    }
                }, 
                "produces": [
                    "application/vnd.vmware.horizon.manager.oauth2clientsummarylist+json"
                ], 
                "description": "", 
                "tags": [
                    "oauth2", 
                    "admin"
                ], 
                "summary": "List existing OAuth 2.0 clients", 
                "security": [
                    {
                        "admin_oauth2": [
                            "admin"
                        ]
                    }
                ], 
                "operationId": "getOAuth2ClientSummaryList"
            }
        }, 
        "/SAAS/auth/oauth2/authorize": {
            "get": {
                "responses": {
                    "200": {
                        "description": "successful operation", 
                        "schema": {
                            "type": "string"
                        }
                    }, 
                    "400": {
                        "description": "The error can be any of those: no client_id has been specified, the client_id does not exist, the redirect_uri has not been specified or does not match. The error message will contain 'error' and 'error_description' fields. See the OAuth2.0 spec for further details."
                    }
                }, 
                "parameters": [
                    {
                        "description": "Specifies the callback endpoint in your application that will receive the authorization code. It must match the redirect_uri defined in the pre-created OAuth2.0 client in VMware Identity Manager. When sending the redirect_uri as a URL parameter it has to be URL encoded.", 
                        "required": true, 
                        "type": "string", 
                        "name": "redirect_uri", 
                        "in": "query"
                    }, 
                    {
                        "description": "This is the identifier of the OAuth 2.0 client that was registered in VMware Identity Manager.", 
                        "required": true, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "Specifies how the application should receive the authorization response. Only 'code' is supported.", 
                        "required": true, 
                        "type": "string", 
                        "name": "response_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "A string that is returned to the application with the response. It is useful for any state information the application may want to associate with the request. For example, it could contain the original endpoint that the user is trying to access and/or where the user should land on after a successful login.", 
                        "required": false, 
                        "type": "string", 
                        "name": "state", 
                        "in": "query"
                    }, 
                    {
                        "description": "Specifies the user's domain. If this parameter is specified, the login screen will skip the domain selection page. This can be used when it is known that a single domain is used or the domain information can be inferred automatically (from the username for example).This is a VMware Identity Manager optional parameter and is not in the OAuth 2.0 specification. ", 
                        "required": false, 
                        "type": "string", 
                        "name": "domain", 
                        "in": "query"
                    }, 
                    {
                        "description": "Specifies the user's login. In caseyour application already knows what user is going to login, and VMware Identity Manager will have to pass this user to a third-party IdP, then adding this parameter will send the username as part of the SAML request. This is a VMware Identity Manager optional parameter and is not in the OAuth 2.0 specification.", 
                        "required": false, 
                        "type": "string", 
                        "name": "u", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "oauth2", 
                    "login"
                ], 
                "description": "This is the starting point of the OAuth 2.0 flow to authenticate end users from your application.This authorization endpoint complies with the OAuth 2.0 specifications and must be used by clients to authenticate users and obtain an authorization code. Your application must have an OAuth 2.0 client already registered in VMware Identity Manager with the 'authorization_code' grant type.", 
                "summary": "OAuth 2.0 authorization endpoint", 
                "operationId": "doOAuth2Authorize"
            }
        }, 
        "/SAAS/auth/oauthtoken": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Successful", 
                        "schema": {
                            "$ref": "#/definitions/OAuth2Token"
                        }
                    }, 
                    "405": {
                        "description": "The HTTP method might be incorrect, make sure you use the POST method."
                    }, 
                    "500": {
                        "description": "The grant_type is incorrect or absent."
                    }, 
                    "401": {
                        "description": "The client authentication failed. Check the 'Authorization' header."
                    }, 
                    "400": {
                        "description": "The error can be any of those: the provided grant type is not supported, the request is missing a required parameter, the client authentication failed, the provided authorization grant is invalid, the authenticated client is not authorized to use this authorization grant type. The error message will contain 'error' and 'error_description' fields. See the OAuth2.0 spec for further details."
                    }
                }, 
                "parameters": [
                    {
                        "description": "Specifies the type of authorization grant in exchange of an access token and possibly a refresh token. VMware Identity Manager supported values are: authorization_code, password, client_credentials, refresh_token and urn:ietf:params:oauth:grant-type:jwt-bearer.", 
                        "required": true, 
                        "type": "string", 
                        "name": "grant_type", 
                        "in": "query"
                    }, 
                    {
                        "description": "The client identifier. If the HTTP Basic authentication scheme is not used, client must specify the client identifier using this request parameter. The use of HTTP Basic is recommended.\n", 
                        "required": false, 
                        "type": "string", 
                        "name": "client_id", 
                        "in": "query"
                    }, 
                    {
                        "description": "The client secret. This parameter is not required if there is no client secret.", 
                        "required": false, 
                        "type": "string", 
                        "name": "client_secret", 
                        "in": "query"
                    }, 
                    {
                        "description": "The username, UTF-8 encoded. Required only if the grant_type is 'password'", 
                        "required": false, 
                        "type": "string", 
                        "name": "username", 
                        "in": "query"
                    }, 
                    {
                        "description": "The password, UTF-8 encoded. Required only if the grant_type is 'password'", 
                        "required": false, 
                        "type": "string", 
                        "name": "password", 
                        "in": "query"
                    }, 
                    {
                        "description": "The scope of the access request. Required only if the grant_type is 'password'", 
                        "required": false, 
                        "type": "string", 
                        "name": "scope", 
                        "in": "query"
                    }
                ], 
                "tags": [
                    "oauth2", 
                    "login"
                ], 
                "description": "This token endpoint complies with the OAuth 2.0 specifications and must be used by client to obtain an access token with client authentication.", 
                "summary": "Obtain an OAuth 2.0 access token and optionally a refresh token", 
                "security": [
                    {
                        "basic_auth": []
                    }
                ], 
                "operationId": "handleRequest"
            }
        }
    }, 
    "schemes": [
        "https"
    ], 
    "tags": [
        {
            "name": "admin"
        }, 
        {
            "name": "oauth2"
        }
    ], 
    "basePath": "/", 
    "securityDefinitions": {
        "admin_oauth2": {
            "scopes": {
                "admin": "The admin role"
            }, 
            "tokenUrl": "/SAAS/auth/oauthtoken", 
            "description": "The OAuth2.0 authentication scheme to access all admin APIs. VMware Identity Manager supports 'Authorization Code', 'Resource Owner Password Credentials' and 'Client Credentials' as defined by the OAuth 2.0 spec.", 
            "flow": "accessCode", 
            "type": "oauth2", 
            "authorizationUrl": "/SAAS/auth/oauth2/authorize"
        }, 
        "basic_auth": {
            "type": "basic", 
            "description": "The HTTP Basic authentication scheme. The 'Authorization' header is formed using 'Basic ' + base64Encode(client_id + ':' + client_secret)"
        }
    }, 
    "host": "localhost:8080", 
    "definitions": {
        "LinkParams": {
            "type": "object"
        }, 
        "OAuth2ClientSummary": {
            "type": "object", 
            "properties": {
                "scope": {
                    "type": "string", 
                    "example": "admin", 
                    "description": "The scope of this OAuth 2.0 client"
                }, 
                "rememberAs": {
                    "type": "string", 
                    "example": "my oauth client", 
                    "description": "The human friendly name of this OAuth 2.0 client"
                }, 
                "_links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Link"
                    }, 
                    "readOnly": true, 
                    "type": "object"
                }, 
                "mediaType": {
                    "type": "string", 
                    "example": "application/vnd.vmware.horizon.manager.clientcredentialsoauth2client+json", 
                    "description": "Defines the media type of this OAuth 2.0 client (Client Credentials type or Classic type)"
                }, 
                "clientId": {
                    "type": "string", 
                    "example": "oauth_clientid", 
                    "description": "The client identifier of this OAuth 2.0 client"
                }
            }, 
            "description": "An OAuth 2.0 client object"
        }, 
        "Link": {
            "type": "object", 
            "properties": {
                "href": {
                    "type": "string", 
                    "format": "uri"
                }, 
                "params": {
                    "$ref": "#/definitions/LinkParams"
                }
            }
        }, 
        "OAuth2Token": {
            "type": "object", 
            "properties": {
                "access_token": {
                    "type": "string", 
                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9xxxxHVcA76zjsGN2w...", 
                    "description": "The requested access token. This token can now be used to call VMware Identity Manager APIs. For example, with the 'Bearer' token type, use 'Bearer &lt;this access token value&gt;' as the 'Authorization' header. The access token is a <a href=\"https://jwt.io/\">JSON web token</a> (JWT)."
                }, 
                "token_type": {
                    "type": "string", 
                    "example": "Bearer", 
                    "description": "The access token type. It provides the client with the information required to successfully utilize the access token to make a protected resource request. For example, the 'Bearer' token type is utilized by simply including the access token string in the request: Authorization: Bearer mF_9.B5f-4.1JqM"
                }, 
                "expires_in": {
                    "description": "The time (in seconds) this token expires. If the return value is positive, the access token is going to expire in that many seconds. If the return value is 0, the access token already expired.If the return value is -1, token state could not be determined, since the access token doesn't contain expiration value.", 
                    "type": "integer", 
                    "example": 21599, 
                    "format": "int64"
                }, 
                "refresh_token": {
                    "type": "string", 
                    "example": "21599", 
                    "description": "The refresh token associated with the access token, if any. This refresh token can be used to request a refresh for the associated access token."
                }, 
                "scope": {
                    "type": "string", 
                    "example": "admin openid", 
                    "description": "The scope of the access token issued. The value is expressed as a list of space-\n   delimited, case-sensitive strings."
                }
            }, 
            "description": "The OAuth 2.0 token object"
        }, 
        "OAuth2ClientSummaryList": {
            "type": "object", 
            "properties": {
                "items": {
                    "items": {
                        "$ref": "#/definitions/OAuth2ClientSummary"
                    }, 
                    "type": "array", 
                    "description": "The list of items in the current page"
                }, 
                "_links": {
                    "additionalProperties": {
                        "$ref": "#/definitions/Link"
                    }, 
                    "readOnly": true, 
                    "type": "object"
                }
            }, 
            "description": "The list of OAuth 2.0 clients"
        }
    }, 
    "swagger": "2.0"
}